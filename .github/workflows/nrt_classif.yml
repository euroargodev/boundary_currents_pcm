# This workflow aims to produce Near Real Time classification of profiles in BCs

name: NRT-classif

on:
#  schedule:
#    # * is a special character in YAML so you have to quote this string
#    - cron:  '*/60 * * * *'
  push:
    branches: [ master ]
  workflow_dispatch: # allows you to trigger the workflow run manually

jobs:
  classify-and-report:

    runs-on: ubuntu-latest
    environment: wekeo

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: 'main'

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: '3.8'

    - name: Install depedencies
      run: |
        python -m pip install --upgrade pip
        pwd
        ls -l
        pip install git+https://github.com/euroargodev/argopy.git@master
        pip install regionmask hda pyxpcm matplotlib
        #        pip install matplotlib geos pyproj
        #        pip3 install --upgrade pyshp
        #        pip3 uninstall shapely
        #        pip install shapely --no-binary shapely
        #        pip install cartopy
        #        Install PROJ
        sudo apt-get install proj-bin
        proj

        # Add the Ubuntu GIS PPA
        sudo apt-get install python-software-properties
        sudo add-apt-repository ppa:ubuntugis/ppa

        # Install the geos packages
        sudo apt-get install libproj-dev libgeos++-dev libgeos-3.8.0 libgeos-c1v5 libgeos-dev libgeos-doc

        # Pin Cartopy version unless installing PROJ via source or using conda.
        # Ubuntu GIS PPA doesn't have the newest PROJ
        poetry add cartopy==0.19.0.post1
        #
        python -c "import argopy; argopy.show_versions()"

    - name: Classify and report
      env:
        WEKEO_USERNAME: ${{ secrets.WEKEO_USERNAME }}
        WEKEO_PASSWORD: ${{ secrets.WEKEO_PASSWORD }}
      run: |
        python load_classif_save.py
        ls -l data

    - name: Save BC report
      uses: EndBug/add-and-commit@v4.4.0
      with:
        author_name: argobot-hub
        author_email: argobot84@gmail.com
        message: 'Update PCM results'
        add: "data/*.png --force"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
